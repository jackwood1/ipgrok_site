import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Card, Badge, Button } from "./ui";
export function ResultsDashboard({ networkData, mediaData, systemData, onShareResults, onExportResults }) {
    const getQualityColor = (grade) => {
        switch (grade) {
            case 'A': return 'success';
            case 'B': return 'info';
            case 'C': return 'warning';
            case 'D': return 'warning';
            case 'F': return 'danger';
            default: return 'default';
        }
    };
    const getStatusColor = (status) => {
        switch (status?.toLowerCase()) {
            case 'excellent':
            case 'good':
                return 'success';
            case 'fair':
                return 'warning';
            case 'poor':
                return 'danger';
            default:
                return 'default';
        }
    };
    const hasData = networkData || mediaData || systemData;
    if (!hasData) {
        return (_jsx(Card, { title: "Results Dashboard", subtitle: "Your test results will appear here", children: _jsxs("div", { className: "text-center py-12", children: [_jsx("div", { className: "text-6xl mb-4", children: "\uD83D\uDCCA" }), _jsx("h3", { className: "text-lg font-medium text-gray-900 dark:text-white mb-2", children: "No Test Results Yet" }), _jsx("p", { className: "text-gray-600 dark:text-gray-400", children: "Run some tests to see your results here." })] }) }));
    }
    return (_jsxs("div", { className: "space-y-6", children: [_jsx(Card, { title: "Overall Performance Score", subtitle: "Your comprehensive internet health score", children: _jsxs("div", { className: "text-center py-8", children: [_jsx("div", { className: "text-6xl font-bold text-gray-900 dark:text-white mb-4", children: networkData?.speedTest?.connectionQuality || 'N/A' }), _jsxs(Badge, { variant: getQualityColor(networkData?.speedTest?.connectionQuality || 'F'), className: "text-lg", children: [networkData?.speedTest?.qualityScore || 'N/A', "/100"] }), _jsx("p", { className: "text-gray-600 dark:text-gray-400 mt-4", children: networkData?.speedTest?.recommendations?.[0] || 'Run more tests for detailed recommendations' })] }) }), networkData && (_jsxs(Card, { title: "Network Performance", subtitle: "Your internet connection analysis", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4", children: [_jsxs("div", { className: "text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg", children: [_jsx("div", { className: "text-2xl font-bold text-blue-600 dark:text-blue-400", children: networkData.speedTest?.download || 'N/A' }), _jsx("div", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Download (Mbps)" }), _jsx(Badge, { variant: getStatusColor(networkData.speedTest?.download > 50 ? 'excellent' : networkData.speedTest?.download > 25 ? 'good' : 'fair'), className: "mt-2", children: networkData.speedTest?.download > 50 ? 'Excellent' : networkData.speedTest?.download > 25 ? 'Good' : 'Fair' })] }), _jsxs("div", { className: "text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg", children: [_jsx("div", { className: "text-2xl font-bold text-green-600 dark:text-green-400", children: networkData.speedTest?.upload || 'N/A' }), _jsx("div", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Upload (Mbps)" }), _jsx(Badge, { variant: getStatusColor(networkData.speedTest?.upload > 25 ? 'excellent' : networkData.speedTest?.upload > 10 ? 'good' : 'fair'), className: "mt-2", children: networkData.speedTest?.upload > 25 ? 'Excellent' : networkData.speedTest?.upload > 10 ? 'Good' : 'Fair' })] }), _jsxs("div", { className: "text-center p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg", children: [_jsx("div", { className: "text-2xl font-bold text-purple-600 dark:text-purple-400", children: networkData.speedTest?.latency || 'N/A' }), _jsx("div", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Latency (ms)" }), _jsx(Badge, { variant: getStatusColor(networkData.speedTest?.latency < 50 ? 'excellent' : networkData.speedTest?.latency < 100 ? 'good' : 'fair'), className: "mt-2", children: networkData.speedTest?.latency < 50 ? 'Excellent' : networkData.speedTest?.latency < 100 ? 'Good' : 'Fair' })] }), _jsxs("div", { className: "text-center p-4 bg-orange-50 dark:bg-orange-900/20 rounded-lg", children: [_jsx("div", { className: "text-2xl font-bold text-orange-600 dark:text-orange-400", children: networkData.speedTest?.packetLossRate || 'N/A' }), _jsx("div", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Packet Loss (%)" }), _jsx(Badge, { variant: getStatusColor(networkData.speedTest?.packetLossRate < 1 ? 'excellent' : networkData.speedTest?.packetLossRate < 3 ? 'good' : 'fair'), className: "mt-2", children: networkData.speedTest?.packetLossRate < 1 ? 'Excellent' : networkData.speedTest?.packetLossRate < 3 ? 'Good' : 'Fair' })] })] }), networkData.advancedTests && (_jsxs("div", { className: "mt-6 pt-6 border-t border-gray-200 dark:border-gray-700", children: [_jsx("h4", { className: "font-medium text-gray-900 dark:text-white mb-4", children: "Advanced Network Analysis" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4", children: [networkData.advancedTests.dnsPerformance && (_jsxs("div", { className: "flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-lg", children: [_jsx("span", { className: "text-sm font-medium text-gray-700 dark:text-gray-300", children: "DNS Performance" }), _jsxs(Badge, { variant: getStatusColor(networkData.advancedTests.dnsPerformance.status), children: [networkData.advancedTests.dnsPerformance.responseTime, "ms"] })] })), networkData.advancedTests.vpnDetection && (_jsxs("div", { className: "flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-lg", children: [_jsx("span", { className: "text-sm font-medium text-gray-700 dark:text-gray-300", children: "VPN Detection" }), _jsx(Badge, { variant: networkData.advancedTests.vpnDetection.isVPN ? 'warning' : 'success', children: networkData.advancedTests.vpnDetection.isVPN ? 'VPN Detected' : 'No VPN' })] })), networkData.advancedTests.networkType && (_jsxs("div", { className: "flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-lg", children: [_jsx("span", { className: "text-sm font-medium text-gray-700 dark:text-gray-300", children: "Network Type" }), _jsx(Badge, { variant: "info", children: networkData.advancedTests.networkType.type })] }))] })] }))] })), mediaData && (_jsx(Card, { title: "Media Performance", subtitle: "Camera and microphone analysis", children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { className: "p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg", children: [_jsx("h4", { className: "font-medium text-blue-900 dark:text-blue-100 mb-3", children: "Video Quality" }), _jsx("div", { className: "space-y-2", children: mediaData.videoQuality && (_jsxs(_Fragment, { children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-blue-800 dark:text-blue-200", children: "Resolution" }), _jsx("span", { className: "text-sm font-medium text-blue-900 dark:text-blue-100", children: mediaData.videoQuality.resolution || 'N/A' })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-blue-800 dark:text-blue-200", children: "Frame Rate" }), _jsxs("span", { className: "text-sm font-medium text-blue-900 dark:text-blue-100", children: [mediaData.videoQuality.frameRate || 'N/A', " FPS"] })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-blue-800 dark:text-blue-200", children: "Quality Grade" }), _jsx(Badge, { variant: getQualityColor(mediaData.videoQuality.qualityGrade || 'F'), children: mediaData.videoQuality.qualityGrade || 'N/A' })] })] })) })] }), _jsxs("div", { className: "p-4 bg-green-50 dark:bg-green-900/20 rounded-lg", children: [_jsx("h4", { className: "font-medium text-green-900 dark:text-green-100 mb-3", children: "Audio Quality" }), _jsx("div", { className: "space-y-2", children: mediaData.audioQuality && (_jsxs(_Fragment, { children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-green-800 dark:text-green-200", children: "Sample Rate" }), _jsxs("span", { className: "text-sm font-medium text-green-900 dark:text-green-100", children: [mediaData.audioQuality.sampleRate || 'N/A', " Hz"] })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-green-800 dark:text-green-200", children: "Channels" }), _jsx("span", { className: "text-sm font-medium text-green-900 dark:text-green-100", children: mediaData.audioQuality.channels || 'N/A' })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-green-800 dark:text-green-200", children: "Quality Grade" }), _jsx(Badge, { variant: getQualityColor(mediaData.audioQuality.qualityGrade || 'F'), children: mediaData.audioQuality.qualityGrade || 'N/A' })] })] })) })] })] }) })), systemData && (_jsx(Card, { title: "System Information", subtitle: "Your device and browser details", children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-gray-600 dark:text-gray-400", children: "IP Address" }), _jsx("span", { className: "text-sm font-medium text-gray-900 dark:text-white", children: systemData.ipAddress || 'N/A' })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Platform" }), _jsx("span", { className: "text-sm font-medium text-gray-900 dark:text-white", children: systemData.platform || 'N/A' })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Screen Resolution" }), _jsx("span", { className: "text-sm font-medium text-gray-900 dark:text-white", children: systemData.screenResolution || 'N/A' })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Timezone" }), _jsx("span", { className: "text-sm font-medium text-gray-900 dark:text-white", children: systemData.timezone || 'N/A' })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-gray-600 dark:text-gray-400", children: "WebGL Support" }), _jsx(Badge, { variant: systemData.webGL ? 'success' : 'danger', children: systemData.webGL ? 'Supported' : 'Not Supported' })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-sm text-gray-600 dark:text-gray-400", children: "CPU Cores" }), _jsx("span", { className: "text-sm font-medium text-gray-900 dark:text-white", children: systemData.cores || 'N/A' })] })] })] }) })), _jsxs("div", { className: "flex flex-col sm:flex-row gap-4", children: [_jsx(Button, { onClick: onShareResults, className: "flex-1", size: "lg", children: "\uD83D\uDCE4 Share Results" }), _jsx(Button, { onClick: onExportResults, variant: "secondary", className: "flex-1", size: "lg", children: "\uD83D\uDCCA Export Data" })] })] }));
}
